{"version":3,"sources":["componants/CalcDysplay.js","calcServices/data/keysArr.js","componants/CalcEqual.js","componants/CalcKeys.js","componants/hooks/useCalculits.js","componants/hooks/onEqual.js","componants/hooks/displayReducer.js","componants/Calc.js","componants/CalcHistory.jsx","App.js","index.js"],"names":["CalcDysplay","show","useContext","DisplayContext","state","console","log","String","id","keysArr","value","action","minus","CalcEqual","display","distate","className","onClick","dispatch","CalcKeys","keys","key","addKey","style","gridArea","push","createKeys","checkActions","i","arr","num1","Number","num2","splice","calculits","cleanSplitFormula","formula","j","k","addition","substruct","multyply","devide","onEqual","splitFormula","split","cleansplit","length","result","num","indexOf","numArr","charAt","cutDecimal4","Infinity","isNaN","reducerValue","act","lastNum","val","checkForDecimal","onEqaual","lastValue","slice","newValue","deleteLast","React","createContext","Calc","reducer","initialState","useReducer","Provider","CalcHistory","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAceA,MAXf,WACE,IACEC,EADYC,qBAAWC,GACRC,MAMjB,OADAC,QAAQC,IAAI,OAAQC,OAAON,IACpB,yBAAKO,GAAG,WAAWP,I,OCXfQ,EAAU,CACrB,CACED,GAAI,MACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,MACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,QACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,OACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,OACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,MACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,QACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,QACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,OACJE,MAAO,IACPC,OAAQ,OAEV,CACEH,GAAI,OACJE,MAAO,IACPC,OAAQ,QAEV,CACEH,GAAI,MACJE,MAAO,MACPC,OAAQ,YAEV,CACEH,GAAI,WACJE,MAAO,MACPC,OAAQ,WACRC,MAAO,KAQT,CACEJ,GAAI,WACJE,MAAO,MACPC,OAAQ,YAEV,CACEH,GAAI,SACJE,MAAO,MACPC,OAAQ,UAEV,CACEH,GAAI,UACJE,MAAO,IACPC,OAAQ,WAEV,CACEH,GAAI,QACJE,MAAO,IACPC,OAAQ,SAOV,CACEH,GAAI,MACJE,MAAO,MACPC,OAAQ,QCvEGE,MArBf,WACE,IAAMC,EAAUZ,qBAAWC,GACrBY,EAAUD,EAAQV,MAExB,OACE,yBACEI,GAAG,SACHQ,UAAU,aACVC,QAAS,WACPZ,QAAQC,IAAIS,GACI,IAAZA,GAGFD,EAAQI,SAAS,CAACJ,EAAQV,MAAO,YARvC,MC0BWe,MA9Bf,WACE,IAAML,EAAUZ,qBAAWC,GAqB3B,OACE,yBAAKK,GAAG,YApBV,WACE,IADoB,EAChBY,EAAO,GADS,cAEJX,GAFI,yBAEXY,EAFW,QAGdC,EACF,4BACED,IAAKA,EAAIb,GACTA,GAAIa,EAAIb,GACRQ,UAAU,aACVO,MAAO,CAAEC,SAAUH,EAAIb,IACvBS,QAAS,kBAAMH,EAAQI,SAAS,CAACG,EAAIX,MAAOW,EAAIV,OAAQ,QAEvDU,EAAIX,OAGTU,EAAKK,KAAKH,IAZZ,2BAA0B,IAFN,8BAgBpB,OAAOF,EAKJM,GACD,kBAAC,EAAD,CAAWT,QAAS,kBAAMH,EAAQI,SAAS,CAAC,MAAO,eCjBlD,SAASS,EAAaC,EAAGC,EAAKlB,GACnC,IAAImB,EAAOC,OAAOF,EAAID,EAAI,IACxBI,EAAOD,OAAOF,EAAID,EAAI,IACxBC,EAAII,OAAOL,EAAI,EAAG,EAAGrB,OAAO2B,EAAUvB,GAAQmB,EAAME,KACpD3B,QAAQC,IAAIuB,GAiCP,IAYMM,EAAoB,SAACC,GAEhC,IAAK,IAAIR,KADTvB,QAAQC,IAAI8B,GACEA,EAAS,CACrB,IAAIC,EAAIT,EAAI,EACVU,EAAIV,EAAI,EACNA,EAAI,IACNvB,QAAQC,IAAIyB,OAAOK,EAAQR,KAC3BvB,QAAQC,IAAI8B,EAAQR,GAAIQ,EAAQC,GAAID,EAAQE,IAEvCP,OAAOK,EAAQR,KAAQG,OAAOK,EAAQC,KAAQN,OAAOK,EAAQE,MAChEjC,QAAQC,IAAI,SACZD,QAAQC,IAAI,IAAKsB,GACjBQ,EAAQH,OAAOK,EAAG,GAClBjC,QAAQC,IAAI8B,KAIlB,OAAOA,GAGHF,EAAY,CAChBK,SAnFF,SAAkBT,EAAME,GACtB,OAAOF,EAAOE,GAmFdQ,UAjFF,SAAmBV,EAAME,GACvB,OAAOF,EAAOE,GAiFdS,SA/EF,SAAkBX,EAAME,GACtB,OAAOF,EAAOE,GA+EdU,OA7EF,SAAgBZ,EAAME,GACpB,OAAOF,EAAOE,GA6EdG,qBCzCaQ,MAxCf,SAAiBP,GACf/B,QAAQC,IAAI,YAAa8B,GAGzB,IAAIQ,EAAeR,EAAQS,MAAM,KACjCxC,QAAQC,IAAIsC,GAEZ,IAAIE,EAAaX,EAAkBS,GACnCvC,QAAQC,IAAIwC,GAEZ,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAWC,OAAQnB,IACf,MAAlBkB,EAAWlB,KACbD,EAAaC,EAAGkB,EAAY,YAC5BlB,KAEoB,MAAlBkB,EAAWlB,KACbD,EAAaC,EAAGkB,EAAY,UAC5BlB,KAIJ,IAAK,IAAIA,EAAI,EAAGA,EAAIkB,EAAWC,OAAQnB,IACf,MAAlBkB,EAAWlB,KACbD,EAAaC,EAAGkB,EAAY,aAC5BlB,KAEoB,MAAlBkB,EAAWlB,KACbD,EAAaC,EAAGkB,EAAY,YAC5BlB,KAIJ,IAAIoB,EDnBC,SAAqBC,GAE1B,IAA0B,KAD1BA,EAAM1C,OAAO0C,IACLC,QAAQ,KAAa,CAC3B,IAAIC,EAASF,EAAIJ,MAAM,KACvB,OAAsB,IAAlBM,EAAOJ,OACFhB,OAAOkB,GAEPlB,OACLoB,EAAO,GACL,IACAA,EAAO,GAAGC,OAAO,GACjBD,EAAO,GAAGC,OAAO,GACjBD,EAAO,GAAGC,OAAO,GACjBD,EAAO,GAAGC,OAAO,IAIvB,OAAOrB,OAAOkB,GCEHI,CAAYP,GAKzB,OAJIE,IAAWM,KAAYC,MAAMP,MAC/BA,EAAS,GAEX3C,QAAQC,IAAI0C,GACLA,GCQMQ,EADM,CA7CL,SAACpD,EAAOO,GACtB,kBAA4BA,EAA5B,GAAOD,EAAP,KAAc+C,EAAd,KAAmB7C,EAAnB,KAEI8C,EADItD,IACc2C,OAAS,GAE/B,OAAQU,GACN,IAAK,WACH,OAAiB,IAAVrD,EACFA,EAAQ,IACG,MAAZsD,EACAtD,EACCA,GAASM,EAChB,IAAK,WACH,OAAiB,IAAVN,EACFA,EAAQQ,EAERR,GADW,MAAZsD,EACU9C,EACAF,EAGhB,IAAK,WAIL,IAAK,SACH,OAAiB,IAAVN,GAA2B,MAAZsD,GAA+B,MAAZA,EACrCtD,EACCA,GAASM,EAChB,IAAK,MACH,OAAiB,IAAVN,EAAeA,EAAQM,EAAUN,GAASM,EACnD,IAAK,OACH,OAAgB,GAATN,EAAaA,EAASA,GAASM,EACxC,IAAK,UACH,OFEC,SAAyBA,GAE9B,IADA,IAAMiD,EAAMpD,OAAOG,GACVkB,EAAI+B,EAAIZ,OAAS,EAAGnB,GAAK,EAAGA,IAAK,CACxC,GAAe,MAAX+B,EAAI/B,GACN,OAAO,EACF,GAAe,MAAX+B,EAAI/B,IAAoB,IAANA,EAC3B,OAAO,GERAgC,CAAgBxD,GAASA,EAASA,GAASM,EACpD,IAAK,QACH,OAAiB,IAAVN,EAAcA,EAASA,EAAQyD,EAASzD,GACjD,IAAK,MACH,OAAiB,IAAVA,EAAcA,EFQD,SAACgC,GACzB,IAAM1B,EAAQH,OAAO6B,GACf0B,EAAYpD,EAAMqD,MAAMrD,EAAMqC,OAAS,GACzCiB,EAAWtD,EAAMqD,MAAM,EAAGrD,EAAMqC,OAAS,GAK7C,MAHkB,MAAde,IAAmBE,EAAWA,EAASD,MAAM,EAAGC,EAASjB,OAAS,IACrD,KAAbiB,IAAiBA,EAAW,GAChC3D,QAAQC,IAAI,cAAe0D,GACpBA,EEhB0BC,CAAW7D,GAC1C,IAAK,QACH,OAxCe,EAyCjB,QACE,OAAOA,IA1CQ,GCCRD,EAAiB+D,IAAMC,gBAgBrBC,MAdf,WACE,kBAAgCZ,EAAhC,GAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA0BC,qBAAWF,EAASC,GAA9C,mBAAO5D,EAAP,KAAcQ,EAAd,KAEA,OACE,yBAAKV,GAAG,iBACN,kBAACL,EAAeqE,SAAhB,CAAyB9D,MAAO,CAAEN,MAAOM,EAAOQ,SAAUA,IACxD,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJOuD,MATf,WACE,OACE,yBAAKjE,GAAG,gBACN,uCACA,wBAAIA,GAAG,iBCSEkE,MATf,WACE,OACE,yBAAK1D,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCJN2D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bc562698.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { DisplayContext } from \"./Calc.js\";\r\n\r\nfunction CalcDysplay() {\r\n  let display = useContext(DisplayContext),\r\n    show = display.state;\r\n  // if (show.length === 4) {\r\n  //   console.log(\",\");\r\n  //   // show.split(\"\").splice(1, 0, \",\").join(\"\");\r\n  // }\r\n  console.log(\"show\", String(show));\r\n  return <div id=\"display\">{show}</div>;\r\n}\r\n\r\nexport default CalcDysplay;\r\n","export const keysArr = [\r\n  {\r\n    id: \"one\",\r\n    value: \"1\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"two\",\r\n    value: \"2\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"three\",\r\n    value: \"3\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"four\",\r\n    value: \"4\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"five\",\r\n    value: \"5\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"six\",\r\n    value: \"6\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"seven\",\r\n    value: \"7\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"eight\",\r\n    value: \"8\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"nine\",\r\n    value: \"9\",\r\n    action: \"num\",\r\n  },\r\n  {\r\n    id: \"zero\",\r\n    value: \"0\",\r\n    action: \"numO\",\r\n  },\r\n  {\r\n    id: \"add\",\r\n    value: \" + \",\r\n    action: \"addition\",\r\n  },\r\n  {\r\n    id: \"subtract\",\r\n    value: \" - \",\r\n    action: \"subtract\",\r\n    minus: \"-\",\r\n  },\r\n  // {\r\n  //   id: \"minus\",\r\n  //   value: \"-\",\r\n  //   action: \"minus\",\r\n  //   minus: \"-\",\r\n  // },\r\n  {\r\n    id: \"multiply\",\r\n    value: \" x \",\r\n    action: \"multiply\",\r\n  },\r\n  {\r\n    id: \"divide\",\r\n    value: \" / \",\r\n    action: \"divide\",\r\n  },\r\n  {\r\n    id: \"decimal\",\r\n    value: \".\",\r\n    action: \"decimal\",\r\n  },\r\n  {\r\n    id: \"clear\",\r\n    value: \"c\",\r\n    action: \"clear\",\r\n  },\r\n  // {\r\n  //   id: \"equals\",\r\n  //   value: \"=\",\r\n  //   action: \"aqual\",\r\n  // },\r\n  {\r\n    id: \"del\",\r\n    value: \"del\",\r\n    action: \"del\",\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { DisplayContext } from \"./Calc.js\";\r\n// import onEqual from \"./hooks/onEqual\";\r\n\r\nfunction CalcEqual() {\r\n  const display = useContext(DisplayContext);\r\n  const distate = display.state;\r\n\r\n  return (\r\n    <div\r\n      id=\"equals\"\r\n      className=\"keys_style\"\r\n      onClick={() => {\r\n        console.log(distate);\r\n        if (distate !== 0) {\r\n          // onEqual(distate);\r\n\r\n          display.dispatch([display.state, \"equal\"]);\r\n        }\r\n      }}\r\n    >\r\n      =\r\n    </div>\r\n  );\r\n}\r\nexport default CalcEqual;\r\n","import React, { useContext } from \"react\";\r\nimport { DisplayContext } from \"./Calc.js\";\r\nimport { keysArr } from \"../calcServices/data/keysArr.js\";\r\nimport CalcEqual from \"./CalcEqual.js\";\r\n\r\nfunction CalcKeys() {\r\n  const display = useContext(DisplayContext);\r\n\r\n  function createKeys() {\r\n    let keys = [];\r\n    for (let key of keysArr) {\r\n      let addKey = (\r\n        <button\r\n          key={key.id}\r\n          id={key.id}\r\n          className=\"keys_style\"\r\n          style={{ gridArea: key.id }}\r\n          onClick={() => display.dispatch([key.value, key.action, \"-\"])}\r\n        >\r\n          {key.value}\r\n        </button>\r\n      );\r\n      keys.push(addKey);\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  return (\r\n    <div id=\"keys_div\">\r\n      {createKeys()}\r\n      <CalcEqual onClick={() => display.dispatch([\" = \", \"equal\"])} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalcKeys;\r\n","function addition(num1, num2) {\r\n  return num1 + num2;\r\n}\r\nfunction substruct(num1, num2) {\r\n  return num1 - num2;\r\n}\r\nfunction multyply(num1, num2) {\r\n  return num1 * num2;\r\n}\r\nfunction devide(num1, num2) {\r\n  return num1 / num2;\r\n}\r\n\r\nexport function checkActions(i, arr, action) {\r\n  let num1 = Number(arr[i - 1]),\r\n    num2 = Number(arr[i + 1]);\r\n  arr.splice(i - 1, 3, String(calculits[action](num1, num2)));\r\n  console.log(arr);\r\n}\r\nexport function cutDecimal4(num) {\r\n  num = String(num);\r\n  if (num.indexOf(\".\") !== -1) {\r\n    let numArr = num.split(\".\");\r\n    if (numArr.length === 1) {\r\n      return Number(num);\r\n    } else {\r\n      return Number(\r\n        numArr[0] +\r\n          \".\" +\r\n          numArr[1].charAt(0) +\r\n          numArr[1].charAt(1) +\r\n          numArr[1].charAt(2) +\r\n          numArr[1].charAt(3)\r\n      );\r\n    }\r\n  } else {\r\n    return Number(num);\r\n  }\r\n}\r\n\r\nexport function checkForDecimal(value) {\r\n  const val = String(value);\r\n  for (let i = val.length - 1; i >= 0; i--) {\r\n    if (val[i] === \".\") {\r\n      return true;\r\n    } else if (val[i] === \" \" || i === 0) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\nexport const deleteLast = (formula) => {\r\n  const value = String(formula);\r\n  const lastValue = value.slice(value.length - 1);\r\n  let newValue = value.slice(0, value.length - 1);\r\n\r\n  if (lastValue === \" \") newValue = newValue.slice(0, newValue.length - 2);\r\n  if (newValue === \"\") newValue = 0;\r\n  console.log(\"new Value :\", newValue);\r\n  return newValue;\r\n};\r\n\r\n// clean dubble operators\r\nexport const cleanSplitFormula = (formula) => {\r\n  console.log(formula);\r\n  for (let i in formula) {\r\n    let j = i - 1,\r\n      k = i - 2;\r\n    if (i > 1) {\r\n      console.log(Number(formula[i]));\r\n      console.log(formula[i], formula[j], formula[k]);\r\n\r\n      if (!Number(formula[i]) && !Number(formula[j]) && !Number(formula[k])) {\r\n        console.log(\"yesss\");\r\n        console.log(\"i\", i);\r\n        formula.splice(k, 2);\r\n        console.log(formula);\r\n      }\r\n    }\r\n  }\r\n  return formula;\r\n};\r\n\r\nconst calculits = {\r\n  addition,\r\n  substruct,\r\n  multyply,\r\n  devide,\r\n  cleanSplitFormula,\r\n  // checkActions,\r\n};\r\nexport default calculits;\r\n","import {\r\n  checkActions,\r\n  cutDecimal4,\r\n  cleanSplitFormula,\r\n} from \"../hooks/useCalculits.js\";\r\n\r\nfunction onEqual(formula) {\r\n  console.log(\"formula: \", formula);\r\n  /* splits screen value to array (splits by \" \" seraunding actionKeys) */\r\n\r\n  let splitFormula = formula.split(\" \");\r\n  console.log(splitFormula);\r\n\r\n  let cleansplit = cleanSplitFormula(splitFormula);\r\n  console.log(cleansplit);\r\n\r\n  for (let i = 0; i < cleansplit.length; i++) {\r\n    if (cleansplit[i] === \"x\") {\r\n      checkActions(i, cleansplit, \"multyply\");\r\n      i--;\r\n    }\r\n    if (cleansplit[i] === \"/\") {\r\n      checkActions(i, cleansplit, \"devide\");\r\n      i--;\r\n    }\r\n  }\r\n  /* after   / and x   action-Keys,   checks + and -   */\r\n  for (let i = 0; i < cleansplit.length; i++) {\r\n    if (cleansplit[i] === \"-\") {\r\n      checkActions(i, cleansplit, \"substruct\");\r\n      i--;\r\n    }\r\n    if (cleansplit[i] === \"+\") {\r\n      checkActions(i, cleansplit, \"addition\");\r\n      i--;\r\n    }\r\n  }\r\n\r\n  let result = cutDecimal4(cleansplit);\r\n  if (result === Infinity || isNaN(result)) {\r\n    result = 0;\r\n  }\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nexport default onEqual;\r\n","// import React from \"react\";\r\nimport onEqaual from \"./onEqual.js\";\r\nimport { checkForDecimal, deleteLast } from \"../hooks/useCalculits.js\";\r\n\r\nconst initialState = 0;\r\nconst reducer = (state, action) => {\r\n  const [value, act, minus] = action,\r\n    num = state;\r\n  let lastNum = num[num.length - 1];\r\n\r\n  switch (act) {\r\n    case \"addition\":\r\n      return state === 0\r\n        ? (state = \"+\")\r\n        : lastNum === \" \"\r\n        ? state\r\n        : (state += value);\r\n    case \"subtract\":\r\n      return state === 0\r\n        ? (state = minus)\r\n        : lastNum === \" \"\r\n        ? (state += minus)\r\n        : (state += value);\r\n    // case \"minus\":\r\n    // return state === 0 ? (state = value) : (state += value);\r\n    case \"multiply\":\r\n      return state === 0 || lastNum === \" \" || lastNum === \"-\"\r\n        ? state\r\n        : (state += value);\r\n    case \"divide\":\r\n      return state === 0 || lastNum === \" \" || lastNum === \"-\"\r\n        ? state\r\n        : (state += value);\r\n    case \"num\":\r\n      return state === 0 ? (state = value) : (state += value);\r\n    case \"numO\":\r\n      return state == 0 ? state : (state += value);\r\n    case \"decimal\":\r\n      return checkForDecimal(state) ? state : (state += value);\r\n    case \"equal\":\r\n      return state === 0 ? state : (state = onEqaual(state));\r\n    case \"del\":\r\n      return state === 0 ? state : deleteLast(state);\r\n    case \"clear\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducerValue = [reducer, initialState];\r\nexport default reducerValue;\r\n","import React, { useReducer } from \"react\";\r\nimport CalcDysplay from \"./CalcDysplay\";\r\nimport CalcKeys from \"./CalcKeys\";\r\nimport reducerValue from \"./hooks/displayReducer.js\";\r\n\r\nexport const DisplayContext = React.createContext();\r\n\r\nfunction Calc() {\r\n  const [reducer, initialState] = reducerValue;\r\n  const [value, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <div id=\"main_calc_div\">\r\n      <DisplayContext.Provider value={{ state: value, dispatch: dispatch }}>\r\n        <CalcDysplay />\r\n        <CalcKeys />\r\n      </DisplayContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calc;\r\n","import React from \"react\";\r\n\r\nfunction CalcHistory() {\r\n  return (\r\n    <div id=\"calc_history\">\r\n      <h4>History</h4>\r\n      <ul id=\"history_ul\"></ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalcHistory;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Calc from \"./componants/Calc.js\";\nimport CalcHistory from \"./componants/CalcHistory\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n      <CalcHistory />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}